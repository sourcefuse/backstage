version: '3.4'

services:
  backstage:
    container_name: backstage_container
    image: sourcefuse/backstage
    build: .
    environment:
      ENVIRONMENT: production
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      AUTH_GITHUB_CLIENT_ID: ${AUTH_GITHUB_CLIENT_ID:-secret}
      AUTH_GITHUB_CLIENT_SECRET: ${AUTH_GITHUB_CLIENT_SECRET:-secret}
      INTEGRATION_GITHUB_APP_ID: ${INTEGRATION_GITHUB_APP_ID-1234}
      INTEGRATION_GITHUB_WEBHOOK_URL: ${INTEGRATION_GITHUB_WEBHOOK_URL-https://test.test}
      INTEGRATION_GITHUB_CLIENT_ID: ${INTEGRATION_GITHUB_CLIENT_ID-secret}
      INTEGRATION_GITHUB_CLIENT_SECRET: ${INTEGRATION_GITHUB_CLIENT_SECRET-secret}
      INTEGRATION_GITHUB_WEBHOOK_SECRET: ${INTEGRATION_GITHUB_WEBHOOK_SECRET-secret}
      INTEGRATION_GITHUB_PRIVATE_KEY: ${INTEGRATION_GITHUB_PRIVATE_KEY-secret}
      SNYK_TOKEN: ${SNYK_TOKEN-secret}
      BASE_URL: ${BASE_URL-http://localhost:7007}
      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL-http://localhost:7007}
      ENABLE_GITHUB_SYNC: "false" # only run this when needed as it uses a large amount of API calls
    ports:
      - '7007:7007'
    networks:
      - backstage
    restart: always

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      -  postgres_backstage:/data/postgres
    ports:
      - '5432:5432'
    networks:
      - backstage
    restart: always

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_LISTEN_ADDRESS: ${PGADMIN_LISTEN_ADDRESS:-0.0.0.0}
    volumes:
      - pgadmin_backstage:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - backstage
    restart: always

networks:
  backstage:
    driver: bridge

volumes:
  postgres_backstage:
  pgadmin_backstage:
